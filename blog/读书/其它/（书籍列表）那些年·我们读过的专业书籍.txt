（书籍列表）那些年·我们读过的专业书籍
2013-12-21 16:51 by Florian
范志东（Florian），目前为应届毕业研究生。

http://www.cnblogs.com/fanzhidongyzby/p/3484856.html
====

《西江月·深夜阅书释疑》

久坐毫无思绪

Bug重现眼前

反向跟踪千百遍

胸中一片茫然

几欲拂袖而去

专业书间流连

细翻案卷三两篇

脑海灵光乍现

有的书带着我们走进一个全新的世界，有的书解答了我们心中久蓄的疑惑，
有的书让我们眼前一亮兴奋不已，有的书令我们回味无穷终生难忘。
作为计算机专业的人，相信大家一定看过不少经典的专业书籍。
这里我们列举一下，那些年，我们读过的专业书籍。

（*部分书籍我还没有读过，就不盲目做评论了，以免误导大家）

=========

1. C++

《C++ Primer》：C++经典，入门必读，几乎涵盖C++所有特性。


《Tinking in C++》：经典同C++ Primer。


《C++沉思录》：技术伉俪名作，C++进阶必看。


《深度探索C++对象模型》：描述C++的底层实现，虚拟机制的原理等。

《STL源码剖析》：描述STL库数据结构和算法实现的原理，泛型设计等。


《C++设计新思维》：C++泛型编程经典。


《Effective C++》：C++基础编程技巧。


《More Effective C++》：C++高阶编程技巧。


《深入理解C++11》：描述C++11的新特性，右值引用，类型推倒，lambda表达式等。


2. Java

《Tinking in Java》：Java入门经典。


《Java核心技术》


《Effective Java》：Java编程技巧。


3. Intel汇编

《Intel汇编语言程序设计》：Intel 汇编编程入门经典。


《Intel® 64 and IA-32 Architectures Software Developer's Manual》：Intel指令手册，共三卷。第二卷详尽描述Intel的指令系统的设计。

《Coding_ASM_Intel_Instruction_Set_Codes_and_Cycles》：详细描述Intel指令的编码和指令周期。

4. 操作系统

《自己动手写操作系统》：自己实现OS的入门读物。


《现代操作系统》：操作系统原理的经典。


4.1 Windows

《Windows核心编程》


《深入解析Windows操作系统》


《深入浅出MFC》：详细描述MFC的实现原理和机制。


《VC++深入详解》：MFC编程参考手册。


《COM本质论》：关于COM的经典著作。


《COM技术内幕》


《COM原理与应用》


4.2 Linux

《深入理解Linux内核》：Linux内核源码分析的经典著作。


《Linux内核的设计与实现》：不可多得的内核源码引导读物。


《Linux内核编程》


《Unix编程艺术》


《Unix环境高级编程》：描述Linux下的系统编程。


《独辟蹊径品内核 LINUX内核源代码导读》


4.3 计算机安全

《0day安全：软件漏洞分析技术》：详细描述缓冲区溢出、shellcode等知识。


《加密与解密》：看雪论坛的经典，对安全技术涵盖非常全面。


《Reversing：逆向工程揭密》


《C++反汇编与逆向分析技术揭秘 》


5. 编译器

《编译原理》（龙书）：编译技术的经典。


《现代编译原理》（虎书）：描述现代编译器的实现。


《高级编译器设计与实现》（鲸书）：着重描述工程化编译器的优化。


《编译器设计》（Engineering a Compiler）：龙书之外的又一部经典，内容丰富。


《编译器设计之路》：描述编译器的实现，书中有大量代码。


《程序员的自我修养 链接装载与库》：了解计算机底层的经典。


《Linker and Loader》：描述链接器和加载器的原理，内容稍少。


6. 算法设计

《算法导论》：算法设计经典读物。


《编程之美》：微软面试题精选。


《算法设计手册》


7. 软件工程

《代码之美》


《编程珠玑》


《人月神话》：Brooks神作。


《设计原本》：Brooks另一神作。


《代码大全》


《程序员修炼之道》


《重构 改善既有代码的设计》


《代码整洁之道》


7.1 设计模式

《设计模式 可面向对象软件基础》：设计模式经典，GOF力作。


《深入浅出设计模式》


《研磨设计模式》


8. 系统观

《深入理解计算机系统》：全面了解计算机系统的经典读物。


《计算机程序的构造与解释》：了解编程语言本质的必读经典。


《实用Common Lisp编程》：函数式编程，Lisp学习的入门读物。


《编码 : 隐匿在计算机软硬件背后的语言》：了解计算机的本质的有趣读物。


9. 专业相关

《黑客与画家》：硅谷创业之父力作，读完有学习Lisp的冲动。


《数学之美与浪潮之巅》：了解数学在IT领域的地位，以及IT公司的兴衰。



《编程人生》


《暗时间》：抓住暗时间，学会如何将自己的时间利用效率最大化。


《欺骗的艺术》：天才IT少年黑客的鲜有之作，体会社会工程学的含义。


《奇思妙想 15位计算机天才及其重大发现》：描述计算机大神们的光辉史。


10. 经典论文

以下20篇论文为IT领域的经典论文，前10篇为架构师必读经典论文，后10篇为程序员必读的经典论文。个人觉得都应该读一读，毕竟都是经典之作。

10.1 架构师

《On_the_Criteria_to_be_Used_in_Decomposing_Systems_into_Modules》

《A Note On Distributed Computing》

《The Next 700 Programming Languages》

《Can Programming Be Liberated from the von Neumann Style A Functional Style and Its Algebra of Programs》

《Reflections on Trusting Trust》

《Lisp Good News,Bad News,How to Win Big》

《An experimental evaluation of the assumption of independence in multiversion programming》

《Arguments and Results》

《A Laboratory For Teaching Object-Oriented Thinking》

《Programming as an Experience The Inspiration for Self》

10.2 程序员

《The Byzantine Generals Problem》

《Go To Statement Considered Harmful》

《A Note On Distributed Computing》

《Big Ball of Mud》

《No Silver Bullet Essence and Accidents of Software Engineering》

《The Open-Closed Principle》

《IEEE recommended practice for architectural description of software intensive systems》

《Harvest, Yield, and Scalable Tolerant Systems》

《An Introduction to Software Architecture》

《Who Needs an Architect？》

