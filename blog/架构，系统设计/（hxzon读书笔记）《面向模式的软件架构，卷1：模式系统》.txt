（hxzon读书笔记）《面向模式的软件架构，卷1：模式系统》by hxzon（2013.11.26）========本书分8章，第1章系统介绍模式的概念，讨论描述模式的原则；第2～4章讲解模式编目，分别阐述了架构模式、设计模式和成例；第5章揭秘如何将模式组织成模式系统及其重要性；第6章探讨将模式融入软件架构的方法；第7章概述模式的历史、相关著作及模式界；第8章展望模式未来发展方向。整体说来，第一卷《模式系统》介绍的内容更为宽泛而通用，书中讲解的各种架构模式也已得到了足够广泛的普及，例如大家耳熟能详的Layer 、MVC以及Pipes And Filters模式，都在本书进行了深入的讨论。当然，准确说来，本书涵盖的内容其实涉及到模式的各个方面。作者将模式分为三个层次，分别为架构模式、设计模式与惯用法（Idioms）。前面提及的模式就属于架构模式的类别，除了这三种模式之外，Broker模式、Presentation-Abstraction-Control模式以及Microkenel模式，对于我们进行软件架构活动而言，都有非常重要的参考价值。至于书中的设计模式部分，可以看做是《设计模式》的延续，有的模式表达的思想本质与GOF的《设计模式》完全一致，只是在命名上略有不同。例如Whole-Part模式与GOF的Composite模式，Publisher-Subscriber模式与GOF的Observer模式都有着千丝万缕的关系。书中还提到了《设计模式》所未曾涵盖的内容，如Forwarder-Receiver模式与Master-Slave模式，以及Client-Dispatcher-Server模式，都非常有用，尤其可以运用在并发场景或分布式场景中，这正是GOF《设计模式》较少提及的内容。=======成例即特定编程语言解决特定问题的方案。第2,3,4章，8种架构模式，8种设计模式，1个成例（C++计数指针）。======8种架构模式：--2.2.1　Layers模式（分层）--2.2.2　Pipes and Filters模式（管道和过滤器）--2.2.3　Blackboard模式（黑板）------------2.3　分布式系统：Broker模式（中间人）----------2.4　交互式系统--2.4.1　Model-View-Controller模式--2.4.2　Presentation-Abstraction- Control模式PAC智能体。----------2.5　可适应系统 109--2.5.1　Microkernel模式。--2.5.2　Reflection模式。======8种设计模式：--3.2　结构分解模式：Whole-Part模式--3.3　工作组织模式：Master-Slave模式--3.4　访问控制：----------3.5　管理模式--3.5.1　Command Processor模式其实就是命令模式。--3.5.2　View Handler模式----------3.6　通信模式--3.6.1　Forwarder-Receiver模式封装通信部分，使得与具体通信机制解耦。（hxzon：与具体实现解耦，这是设计常识，根本不算一种模式？）--3.6.2　Client-Dispatcher-Server模式分派器。--3.6.3　Publisher-Subscriber模式变种：Event Channel(事件通道)。不关心事件来源，只关心事件本身。