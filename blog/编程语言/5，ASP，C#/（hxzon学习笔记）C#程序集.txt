（hxzon学习笔记）C#程序集

by hxzon
====
《C#高级编程，中文版，第7版》第18章-程序集

18.1，
assembly，程序集。

程序集是.net应用程序的部署单元。
.net应用程序包含一个或多个程序集。
通常扩展名是exe或dll的.net可执行程序称为程序集。

程序集和本地dll和exe的区别，
在于它们虽然扩展名相同，但.net程序集包含元数据。
这些元数据描述了程序集中定义的所有类型及其成员的信息，
即方法，属性，事件，字段。

.net程序集的元数据还提供程序集中文件的相关信息、版本信息，
和所使用的程序集的信息。

程序集是自我描述的安装单元。

程序集可以是私有或共享的。

在使用共享程序集时，几个应用程序都使用同一个程序集，且与它有一定的依赖关系。

应用程序使用应用程序域来确保其它独立性。

程序集由描述它的程序集元数据、 描述导出 类型和方法的类型元数据、 MSIL代码和资源组成。
所有这些部分都在一个文件中,或者分布在几个文件中。

----
程序集的一个重要部分是程序集清单，它是元数据的 一部分，描述了程序集和引用它所需要的
所有信息，并列出了它所有的依赖关系。

----
名称空间完全独立于程序集。

----
在使用共享程序集时，必须有一个唯一的名称，称为“强名”。

----
附属程序集是只包含资源的程序集，它尤其适用于本地化。

程序集可以使用命令行实用工具 ildasm来查看，这是一个 MSIL反汇编程序。

----
程序集（《C#入门经典第5版》1.1）

在编译应用程序时，所创建的CIL代码存储在一个程序集中。
程序集包括可执行的应用程序文件
（这些文件可以直接在windows上运行，不需要其他程序，其扩展名是exe）
和其它应用程序使用的库（其扩展名是dll）。

除了包含CIL外，程序集还包含元信息和可选的资源（例如声音文件盒图片）。
元信息允许程序集是完全自描述的，
不需要其它信息就可以使用程序集。
因此，部署应用程序就非常简单了，只需把文件复制到远程计算机上的目录即可（假定安装了.net CLR）。

====
18.2，创建程序集

在Visual Studio中，所有的C#项目类型都会创建一个程序集。 无论是选择dll项目类型，还是 exe项目类型，都会创建一个程序集。

使用命令行 C#编译器 csc,也可以创建模块。
模块是一个没有程序集特性的dll（所以它不是程序集，但 可以在以后把它添加到程序集中）。

模块的作用，是可以更快的启动程序集，因为并不是所有的类型都在一个文件中。
模块只在需要时加载。
模块的另一个作用是，要用多种编程语言来创建一个程序集。
一个模块用VB编写，一个模块用C#编写，并且这两个模块都包括在一个程序集中。

在创建VS项目时，会自动生成源文件AssemblyInfo.cs 。
这个文件用于配置程序集清单。

----
在开发期间，添加对程序集的引用，使之包含在程序集引用中，该类型的程序集就可用于编译器。
在运行期间，只要实例化了一种类型的程序集，或者使用了该类型的一个方法，就会加载所引用的程序集。

除了使用这种自动操作外，还可以通过编程加载程序集。
使用Assembly的静态方法Load()。

CSharpCodeProvider可以用来动态的编译C#代码。

====
18.3，应用程序域

要卸载程序集，需要使用应用程序域。

在net之前的技术中，进程作为独立的边界来使用。
在net体系结构中，应用程序有一个新的边界，应用程序域。
使用托管IL代码，运行库可以确保在同一个进程中，不能访问另一个应用程序的内容。

实例和静态成员不能在应用程序域之间共享。
如果没有代理，应用程序域不能访问另一个应用程序域中的对象。

AppDomain类用于创建和终止应用程序域，加载和卸载程序集和类型，以及枚举应用程序域中的程序集和线程。

----
在运行库宿主上，会自动创建应用程序域。

----
只有派生于MarshalByRefObject的类，才能通过另一个应用程序域来访问。
在主应用程序域中，实例化一个代理，以通过应用程序域之间的信道调用这个类的方法。

====
18.4，共享程序集

必须使用强名唯一地标识共享程序集，强名通过给程序集的签名来创建。

COM使用全局唯一标识符GUID解决了唯一性，但不能阻止其他人使用相同的GUID。
强名解决了这两个问题。

（p485）

====
18.5，配置.net应用程序

COM组件使用注册表来配置组件。
.net应用程序的配置使用配置文件。
配置文件使用xml语法来指定应用程序的启动和运行库配置。

====
18.6，版本问题

====
18.7，小结

使用本机映像生成器可以更快的启动应用程序。
有了本机映像生成器，就不需要运行jit编译器，因为本机代码是在安装期间创建的。

程序集是自描述的，不需要类型库和注册信息。
版本的依赖性会准确的记录下来。

