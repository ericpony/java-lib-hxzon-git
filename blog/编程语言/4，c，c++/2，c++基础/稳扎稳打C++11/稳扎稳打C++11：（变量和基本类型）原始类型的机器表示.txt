稳扎稳打C++11：（变量和基本类型）原始类型的机器表示

来源：ilanever.com | 作者：LanPei | 创建时间：2013-9-29 19:56:24
http://ilanever.com/article/sitedetail.html;jsessionid=2961C1F211EC6475556C3D02C1E9F698?id=196

计算机是如何根据数据类型来操作内存的。
目录
计算机使用由0和1组成的序列来存储数据。例如：
00011011011100010110010000111011 ...
大多数的计算机将内存分成块来进行处理，每个块由2的幂的位数组成。最小的可寻址内存的块被认为是一个“字节(byte)”。基本的存储单元，通常由小数目的字节组成，被认为是“字(word)”。在C++中，一个字节至少应该有足够的位数来存储机器基本字符集中的一个字符。大多数的机器中一个字节包含8位，一个字包含32位或64位。
大多数的计算机为每个字节关联了一个数字，这个数字被称作“地址(Address)”。在一个8位字节和32位字的机器上，我们会看到内存中的一个字如下所示：

如此，字节的地址在左侧，紧随其后的是字节的8个位(bit)。
我们能够使用一个地址指向起始于那个地址的任何大小可变的位集合。为了给已知地址的内存赋予意义，我们必须知道存储的值的类型。类型决定了要使用多少位以及如何解释这些位。
如果位置736424的对象的类型是float，并且如果这个机器的float类型为32位的话，那么我们知道该对象占据了全部的字。float的值依赖于机器存储浮点数的具体细节。另外，如果位置736424的对象的类型是unsigned char，并且该机器使用的是ISO-Latin-1字符集，那么该地址表示的是一个分号。