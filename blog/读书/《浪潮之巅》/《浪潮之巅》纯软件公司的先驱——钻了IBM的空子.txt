《浪潮之巅》纯软件公司的先驱——钻了IBM的空子
http://blog.csdn.net/zuoninger/article/details/20369381

本文摘自《浪潮之巅》第二版“纯软件公司的先驱”一章。
这是新版中唯一增加的完整章节。
因篇幅较长，将文章分成五小节陆续更新。本文是第一节。

====
甲骨文钻了IBM的空子

甲骨文的起家到后来的初步成功，在很大程度上是埃里森等人钻了IBM的两个空子。
第一个空子是IBM自己忽视了关系型数据库的革命性作用。
埃里森自己认为，他最初的灵感来自IBM计算机科学家科德的论文
“大规模共享数据库的数据关系模型（A Relational Model of Data for LargeShared Data Banks）”。
这篇论文发表于1970年，而在此之前在数据库领域占统治地位的是层次模型（Hierarchical model）和网络模型（Networkmodel）。
这两种早期的模型，更强调数据库实现的效率（访问时间），但缺点是逻辑实现和物理实现混淆，
因此不方便直接访问数据库中的内容，也不方便实现复杂的查询逻辑，这样的数据库也不可能做得很大。

早期数据库系统还有一个致命的弱点，就是它的开发十分复杂，开发和维护人员需要经过长时间的专业训练。
与层次模型及网络模型相比，关系型数据库将数据库的物理层和逻辑层完全分离。
这带来很多的好处，首先能够实现非常复杂的查询逻辑，能够实现很大、很复杂的数据库。

其次，关系型数据库的逻辑层因为和物理层无关，很容易理解，因此开发的难度相对较低，可以在短期内培养大量的开发人员。
而较为复杂的物理层，则可以由少数专业人员来实现。这样很容易培育一个产业。

但是令人遗憾的是，IBM自己并不是很重视这项革命性的发明。
虽然科德自己在IBM 内不断说服公司开发关系型数据库产品，但是IBM还是只把它放到了当时IBM的主打数据库“系统R”（System R）下面的一个小项目里，而系统R的查询语言SEQUEL并不完全是关系型的。由于IBM的工程力量很强，因此，虽然系统R的查询语言不是完全关系型的，但是性能却很好，这让IBM更加不理会科德的工作。因为这个缘故，科德和IBM的关系搞得很僵，他先是在IBM 内部自己建立了一个团队开发“真正的关系型数据库系统”，后来干脆离开IBM单干，自己创办了一家公司。

但是埃里森对这项技术的态度完全不同。
当甲骨文公司的另一位创始人欧特斯将这项技术介绍给埃里森后，埃里森决定离开Ampex，专心开发关系型数据库的管理系统。

鉴于IBM的系统R数据库在当时居统治地位，埃里森等人决定自己的产品和IBM 的系统R兼容。
如果当时IBM 让埃里森等人兼容它的系统R，甲骨文今天可能很大程度上要兼容IBM 的产品。
但是IBM 却不愿意，他们不肯开放代码，这就逼着埃里森等人只好自己单干，
两年后终于成功开发出第一款商用的关系型数据库管理系统Oracle2，
并且获得了第一个订单—来自俄亥俄州的怀特·派特森空军基地（Wright Patterson Air Force Base）。
而同年1979 年，科德实在受不了系统R 部门对他的冷落，
自己在IBM 内部拉出一个团队做关系型数据库的管理系统，也就是做埃里森等人已经完成的工作。

当然，光靠提早这一点点时间还远不足以和IBM竞争，
上个世纪七八十年代，IBM公司在全球数据库市场占统治地位，系统R的用户非常多，
只要它稍微往关系型数据库方面转一转，甲骨文就没有存在的必要了，更不用说竞争。甲骨文赢是赢在商业模式上。

在甲骨文出现以前，整个计算机行业企业级市场的商业模式是这样的。
首先，当时的个人计算机市场几乎是零，苹果还很小，IBM-PC 还没有出来，因此计算机市场几乎完全是企业级的市场。
而所有计算机公司，从大的IBM到中小的DEC和惠普，商业模式都是“合同制“。
比如，IBM卖一台大型机系统给花旗银行，它不是简单地把硬件（大型机主机，终端，打印机等）和软件（数据库）卖出去就算完事了，
而是必须连同服务一起销售，IBM会把技术人员（通常是合同工）派到花旗银行全时为银行服务。
当然，IBM每年的服务费要占到软硬件售价的10% 甚至更多。

而在IBM 公司内部，从处理器研制，到硬件制造，到软件开发，都需要它自己做，因此每个系统的成本都非常高。
（这也给了微机起飞的机会。）
不仅是IBM，连规模小得多的DEC和CDC等都需要开发自己的处理器、硬盘、操作系统、应用软件等等。
可以讲，整个计算机行业没有明确的分工。
在这种模式下，软件的价值必须通过硬件的销售和服务的提供来体现。
没有一家计算机公司把软件部分单独拿出来卖，因为买了DEC的硬件的用户无法用IBM 的软件。因此，在那个年代，没有独立的软件公司。
而在那个年代起家的苹果公司，在商业模式上依然带有软硬件捆绑在一起的痕迹。

甲骨文的商业模式很简单，它只卖软件，而不是靠收服务费生存。企业用户一旦买了它的软件，就不需要额外付给甲骨文服务费了，除非用户不会使用需要向它咨询而付给它一些咨询费。这么简单的商业模式，显然可以给用户带来很大的好处，但是IBM不喜欢，因为这样一来它就很难一劳永逸地收服务费了。

甲骨文没有自己的硬件，这种商业模式要成立得有一些先决条件，那就是有硬件厂家愿意捆绑它的软件，而放弃开发自己的数据库软件。
甲骨文最早的数据库系统就是为IBM 当时的竞争对手DEC开发的。
而DEC这些在行业里位居第二档的公司(第一档的只有IBM一家。)也乐意接受这样的分工，
因为如果有一家软件公司同时为四五家硬件厂商开发软件，那么每家实际摊到的开发成本只有原来的五分之一到四分之一。

甲骨文的这种商业模式讲起来非常简单，但是很有效。
加上上个世纪80年代以后，关系型数据库被认为是今后数据库的发展方向。
渐渐地，甲骨文的数据库系统被一些中小企业接受。
由于甲骨文只卖软件，不强行搭售服务，因此为了方便用户在它的数据库管理系统上二次开发应用数据库，
它为用户开发了一套开发工具— 交互式应用工具（InteractiveApplication Facility，简称IAF)。
这样就又在社会上培养了一大批基于甲骨文数据库系统进行二次开发的程序员，
逐渐培育起一个行业，并且形成了一个以甲骨文为核心的利益群体。

到了上个世纪90年代，甲骨文的营业额从上市前的每年5,500万，5年增长了16倍，到1990年的9亿美元。
虽然，它的数据库的收入依然比不上IBM，但是为甲骨文进行二次开发的程序员人数却远远超过了IBM。

和甲骨文同期崛起的软件公司还有微软公司，二者的商业模式类似，都是只卖软件，一个在企业级市场，一个在个人用户端。
继这两家公司之后，独立的软件公司如雨后春笋般大量涌现出来。
到上个世纪80年代中期，计算机产业终于出现了软硬件分离的格局。
甲骨文在这次计算机工业分工的发展浪潮中，功不可没。

注：
关于甲骨文股份有限公司（NASDAQ：ORCL，Oracle）是全球大型数据库软件公司。
总部位于美国加州红木城的红木岸（Redwood Shores），
现时首席执行官为公司创办人劳伦斯·埃里森（Lawrence J. Ellison）。
在2013年，甲骨文是继Microsoft后，全球收入第二多的软件公司。[3]


