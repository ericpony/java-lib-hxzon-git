（hxzon学习笔记）clojure与设计模式

by hxzon
======
《clojure编程，第12章：设计模式》

大部分设计模式都是弥补java和ruby本身的语言缺陷，lisp中不需要。
高阶函数干掉一批“设计模式”，宏干掉最后残存的“模式”。

1，clojure用得最多的是责任链（过滤器，管道）。Ring就使用了责任链。

=======
2，监听器/观察者，clojure鼓励不可变对象，使得用到的范围大大减少。
对于可变值，在clojure中需明确说明，同时可对其监控。

3，依赖注入。（hxzon：书中例子只是说明clojure可扩展一个对象，不受类型和继承限制，和“依赖注入”本身完全不搭边。）

4，面向方面编程。本身函数就可作为参数，很容易被包装。另外还有宏，
还有专门的clojure库：Robert Hooke library  (https://github.com/technomancy/robert-hooke)。

5，抽象工厂，策略模式，命令模式。本身函数就可作为参数，不必借助对象，直接组合即可。

6，迭代器。直接使用序列更佳。

7，适配器，包装器，代理。使用协议可以扩展一个对象，不受类型和继承限制，对象也就没必要被适配、包装、代理。

8，备忘录模式（记住对象的状态，方便以后复原）。clojure鼓励不可变对象，如果要恢复，只需保存原来对象即可。

9，模板方法。本身函数就可作为参数，很容易组合。还有宏，可扩展成任意代码。

