zul.inp.Decimalbox=zk.$extends(zul.inp.NumberInputWidget,{$define:{scale:null},onSize:function(){var a=this.getWidth();if(!a||a.indexOf("%")!=-1){this.getInputNode().style.width=""}this.syncWidth()},syncWidth:function(){zul.inp.RoundUtl.syncWidth(this,this.$n("right-edge"))},coerceFromString_:function(b){if(!b){return null}var c=zk.fmt.Number.unformat(this._format,b,false,this._localizedSymbols),d=new zk.BigDecimal(c.raw),a=d.$toString();if(c.raw!=a&&c.raw!="-"+a){return{error:zk.fmt.Text.format(msgzul.NUMBER_REQUIRED,b)}}if(c.divscale){d.setPrecision(d.getPrecision()+c.divscale)}if(this._scale>0){d=zk.fmt.Number.setScale(d,this._scale,this._rounding)}return d},coerceToString_:function(b){var a=this._format;return b!=null?typeof b=="string"?b:a?zk.fmt.Number.format(a,b.$toString(),this._rounding,this._localizedSymbols):b.$toLocaleString():""},getZclass:function(){var a=this._zclass;return a!=null?a:"z-decimalbox"+(this.inRoundedMold()?"-rounded":"")},marshall_:function(a){return a?a.$toString():a},unmarshall_:function(a){return a?new zk.BigDecimal(a):a},getAllowedKeys_:function(){var a=this._localizedSymbols;return this.$supers("getAllowedKeys_",arguments)+(a?a:zk).DECIMAL},bind_:function(){this.$supers(zul.inp.Decimalbox,"bind_",arguments);if(this.inRoundedMold()){zWatch.listen({onSize:this})}},unbind_:function(){if(this.inRoundedMold()){zWatch.unlisten({onSize:this})}this.$supers(zul.inp.Decimalbox,"unbind_",arguments)}});