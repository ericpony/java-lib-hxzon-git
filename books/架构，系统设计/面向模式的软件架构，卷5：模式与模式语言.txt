面向模式的软件架构，卷5：模式与模式语言

Frank Buschmann (作者), Kevlin Henney (作者), Douglas C. Schmidt (作者), 肖鹏 (译者)
--
出版社: 人民邮电出版社; 第1版 (2011年9月1日)
外文书名: Pattern Oriented Software Architecture: On Patterns and Pattern Languages, Volume 5
丛书名: 图灵程序设计丛书
平装: 262页
语种： 简体中文
开本: 16
ISBN: 7115261733, 9787115261731

==============
为了对架构以及架构模式有更深入的理解，我曾硬着头皮、下定决心、不辞万难地啃完了这个系统的三卷，分别为第1、3、4卷。
在我未来的阅读计划中，本系列的第二卷是我必须要阅读的。
关于第五卷《模式语言》，窃以为更多地是偏向理论介绍，大可以忽略不计。


==============
编辑推荐

软件模式已大大改变了我们设计、实现和思考计算系统的方式。模式给我们提供了用于描述架构愿景的词汇，以及清晰明了、切中要点的典型设计和详细实现示例。然而，在模式概念方面很久都没有紧跟技术发展的著作出现了。对于模式概念的基础知识的新认识也仅停留在模式社区少数专家和思想先驱们的头脑中。本书的目的正是要总结模式与模式语言的知识，满足软件开发社区的需求。

由肖鹏编译的《面向模式的软件架构》是“面向模式的软件架构”系部分的内容为基础介绍模式列的收官之作，将呈现、讨论、比较和关联众多模式概念(如单个模式、模式互补、模式复合、模式故事、模式序列和模式语言)中已知的特性和应用。

本书共分3部分，首先介绍了单个模式，详细阐述了过去累积的关于如何描述和应用模式的诸多见解，接着探究了模式之间的关系，从组织的角度说明了各个模式的领域，最后介绍了如何将模式和模式语言相结合。

----
作者简介

FranK Buschmann 德国慕尼黑西门子技术公司资深技术专家及负责人。Wiley软件设计模式系列图书主编。
他的研究领域包括对象技术、软件架构、产品线、模型驱动软件开发和模式。
他曾是ANSI C++标准化委员会x3J16的成员，于1996年发起了首届EuroPLoP会议。

Kevlin Henney他在编程语言和技术、软件架构、模式和敏捷开发等领域从事辅导和实践工作。
他是很多软件会议固定邀请的演讲人。同时也参与了多个会议的组织工作，包括EuroPLoP。
他经常发表会议论文，主持各种出版物上定期和不定期的专栏。

Douglas C．Schmidt 国际公认的软件开发专家，尤其在模式、面向对象框架、实时中间件、建模工具和开源软件开发等方面享有盛誉，
现任美国范德比尔特大学(Vanderbilt University)计算机科学教授。
他的研究领域包括模式和模式语言，优化原理，支持服务质量的组件中间件相关技术的实证分析，以及支持分布式实时嵌入式系统的模型驱动的工程工具。

肖鹏 ThoughttWorks高级咨询师。敏捷过程教练。面向对象分析和面向对象设计专家。
拥有7年以上软件开发实践经验。多次为国内大中型企业提供敏捷流程改进、面向对象分析和面向对象设计咨询和培训。
他长期关注设计模式、架构模式、敏捷软件开发等领域，并致力于推广软件开发最佳实践。
他曾参与翻译《VisualStudio 2005技术大全》。主持翻译《面向模式的软件架构》第四卷和第五卷。

===================
目录

第0章　尘埃落定


第一部分　模式剖析

第1章　问题之解决方案及其他
第2章　多种多样的模式实现
第3章　模式格式


第二部分　模式之间的关系
第4章　模式孤岛
第5章　模式的互补性
第6章　模式复合
第7章　模式序列
第8章　模式集合


第三部分　模式语言
第9章　语言的元素
第10章　模式网络及其他
第11章　亿万种不同的实现
第12章　模式语言的格式
第13章　模式与模式语言
第14章　从模式到人
第15章　模式的过去、现在和未来
第16章　万事如意


模式概念总结

参考模式
参考文献

===================
目录


第0 章 尘埃落定　　1

0.1 渊源　　1

0.2 成功与失败　　 2
0.2.1 观察　　2
0.2.2 状态　　3
0.2.3 处方　　4

0.3 模式定义及解释　　5
0.4 深入理解模式　　11



第一部分 模式剖析


第1 章 问题之解决方案及其他　　15

1.1 问题之解决方案　　15
1.1.1 一个例子（1） 　　15
1.1.2 重现与良好　　16

1.2 流程和物件　　16
1.3 “好”的解决方案　　17

1.4 驱动力：模式之心脏　　19
1.4.1 一个例子（4） 　　19
1.4.2 dysfunctional、bad 还是anti 　　21

1.5 上下文　　22
1.5.1 一个例子（5） 　 23
1.5.2 上下文的一般性　　23
1.5.3 独立上下文　　24
1.5.4 一个例子（6） 　 25

1.6 一般性　　 25
1.7 一图胜（逊）千言　　 27

1.8 模式命名　　29
1.8.1 模式命名的语法分类　　30
1.8.2 字面命名还是隐喻　　 30

1.9 模式是循序渐进的　　 31
1.10 模式既是讲故事，又能发起对话　　33
1.11 模式不能代替思考　　 33
1.12 从“问题—解决方案”到模式　　34


第2 章 多种多样的模式实现　　35

2.1 是否存在一个通用的模型呢　　35
2.1.1 Observer 模式：快速回顾　　36
2.1.2 结构的变化与角色　　36
2.1.3 行为的变化　　37
2.1.4 内部差异　　38
2.1.5 语言及平台的差别　　39
2.1.6 领域、环境相关的变化　40
2.1.7 再论假设　　41

2.2 模式与框架　　42
2.2.1 工具和上下文环境　　44
2.2.2 两个框架的故事　　44

2.3 模式与形式主义　　47
2.4 通用性与特殊性　　48


第3 章 模式格式　　50

3.1 风格与实质　　50
3.2 格式的功能　　52
3.3 格式的元素　　53

3.4 细节　　55
3.4.1 案例　　56
3.4.2 图示　　57
3.4.3 <code>…</code> 　　57

3.5 鸟瞰图　　 58
3.5.1 从金字塔到托盘　　58
3.5.2 模式骨架　　58
3.5.3 总结意图　　60
3.5.4 模式抽象　　60

3.6 不同的格式　　60
3.6.1 演变　　61
3.6.2 选择　　62

3.7 风格与实质（Redux） 　　63



第二部分 模式之间的关系


第4 章 模式孤岛　　 67

4.1 模式的联系　　67
4.2 设计实验：将模式作为孤岛　　68
4.3 第二个设计实验：交织在一起的模式　　72
4.4 模式密度　　73


第5 章 模式的互补性　　 75

5.1 一个问题，多种解决方案　　75

5.2 互相竞争的模式　　76
5.2.1 以状态为例　　76
5.2.2 模式族　　79
5.2.3 迭代开发　　80
5.2.4 适配开发　　83
5.2.5 遵从康威定律　　84
5.2.6 与风格的设计对话　　86

5.3 互相合作的模式　　87
5.3.1 一个关于值的例子　　88
5.3.2 设计上的完善　　 88

5.4 模式结合　　89
5.4.1 再论迭代　　89
5.4.2 再论适配编程　　91

5.5 互补性：竞争、完善、结合　　92


第6 章 模式复合　　93

6.1 常见模式排列　　93

6.2 从元素到复合　　93
6.2.1 Pluggable Factory 　　94
6.2.2 Composite Command 的两种视角　　95
6.2.3 模式复合的格式　　 96

6.3 从补充到复合　　97

6.3.1 重申　　 97
6.3.2 适配　　 99

6.4 是元素还是组合　　100
6.4.1 组合的含义　　100
6.4.2 深入MVC　　101

6.5 复合分析与综合　　102
6.5.1 非设计模式的复合　　102
6.5.2 设计模式复合　　103


第7 章 模式序列　　104

7.1 模式讲述软件工程成功的故事　　104

7.2 模式故事　　105
7.2.1 一个小故事　　105
7.2.2 已经发表的故事　　107

7.3 从故事到序列　　108

7.4 模式的序列　　109
7.4.1 一个早期的例子　　110
7.4.2 模式序列既是流程也是物件　　110
7.4.3 再次回到以前提到的小故事　　111

7.5 回顾模式复合和模式互补　　112
7.5.1 重组　　112
7.5.2 再论Batch Iterator 　　113
7.5.3 再论Interpreter 　　　114
7.5.4 再论Align Architecture andOrganization 　　115

7.6 回到上下文的问题　　 116
7.6.1 定义上下文　　116
7.6.2 专用化与差异化　　118

7.7 模式间的联系　　118


第8 章 模式集合　　120

8.1 模式手册　　120
8.2 组织模式集合　　121
8.3 即时组织　　121

8.4 根据层次组织　　122
8.4.1 设计和架构　　122
8.4.2 惯用法　　 123
8.4.3 混合层次　　124
8.4.4 层次　　124

8.5 根据领域组织　　125

8.6 根据分区组织　　125
8.6.1 阶层架构　　126
8.6.2 分区　　126

8.7 根据意图组织　　126
8.7.1 根据意图划分POSA 的模式　　127
8.7.2 根据意图划分GoF 的模式　　128
8.7.3 根据意图划分DDD 模式　　128
8.7.4 反思模式意图　　128

8.8 组织模式集合（重奏）　　 128

8.9 问题框架　　 129
8.9.1 问题框架　　130
8.9.2 问题框架和模式的对比　　 131
8.9.3 问题框架与模式的组合　　 132

8.10 模式符号学　　132

8.11 模式集合与风格　　134
8.11.1 Unix 接口设计模式　　135
8.11.2 Web 2.0 设计模式　　136
8.11.3 风格与概念一致性　　137

8.12 走向模式语言　　138



第三部分 模式语言


第9 章 语言的元素　　141

9.1 使用模式进行设计　　 141

9.2 从模式故事和模式序列到模式语言　　 142
9.2.1 一个未完成的故事　　143
9.2.2 序列的组合　　145


第10 章 模式网络及其他　　147

10.1 模式网络　　147

10.2 流程与物件　　147
10.2.1 流程的迭代本质　　 148
10.2.2 具体的面向领域的引导　　152

10.3 单项最佳　　153
10.4 驱动力：模式语言之心脏　　155
10.5 模式上下文定义拓扑结构与架构风格　　 158
10.6 模式构成词汇，序列展示语法　　 159

10.7 通用性　　162
10.7.1 不同的模式序列　　162
10.7.2 模式的组合　　163

10.8 完整的语言胜过千幅图　　163
10.9 面向领域的命名帮助忆起模式语言　　164
10.10 模式语言展开对话并讲述很多故事　　165
10.11 路还很长　　165
10.12 模式语言对创造性智慧的回报　　167
10.13 从模式网络到模式语言　　 168


第11 章 亿万种不同的实现　　169

11.1 众口难调　　169

11.2 渐进式成长　　169
11.2.1 面向系统的、进化的设计方法　　170
11.2.2 渐进式成长和敏捷开发　　171

11.3 并没有排斥重构　　172

11.4 一次一个模式　　174
11.4.1 明白手头上的问题的关键　　 174
11.4.2 优先级驱动的设计决策　　175
11.4.3 模式集成先于模式实现　　175

11.5 基于角色的模式集成　　176
11.5.1 选择1：识别并且保持已经实现的角色　　176
11.5.2 选择2：识别并分离已经实现的角色　　177
11.5.3 选择3：将缺失角色分配给既有设计元素　　178
11.5.4 选择4：将缺失角色作为新设计元素来实现　　179
11.5.5 基于角色的模式集成和渐进式成长过程　　180

11.6 模式语言和参考架构　　180
11.7 模式语言与产品线架构　　181
11.8 从十亿个到一个……再到一些　　184


第12 章 模式语言的格式　　185

12.1 风格与本质　　185
12.2 格式的作用　　185

12.3 格式的元素　　186
12.3.1 展示全貌　　187
12.3.2 简洁与细节　　187
12.3.3 模式连接　　189
12.3.4 再说元素　　189

12.4 细节，细节，细节　　 190
12.4.1 模式语言的格式　　 190
12.4.2 鸟瞰图　　 190
12.4.3 展示顺序　　194
12.4.4 示例　　194
12.4.5 细节程度　　195

12.5 再论风格与本质　　 197


第13 章 模式与模式语言　　198

13.1 模式和模式语言：共性　　198
13.1.1 共同的核心属性　　198
13.1.2 共同的根源　　199
13.1.3 一个模式的模式语言　　199

13.2 模式与模式语言：区别　　200
13.2.1 模式和细节　　 200
13.2.2 模式语言和交互　　200
13.2.3 两个独立的世界　　201

13.3 模式“对”模式语言　　201


第14 章 从模式到人　　202

14.1 模式以人为本　　 202
14.1.1 模式价值体系　　 203
14.1.2 人类读者　　 204

14.2 对软件开发者的支持　　204

14.3 对软件使用者的支持　　206
14.3.1 用户界面　　206
14.3.2 用户需求　　206
14.3.3 交到用户手中　　207

14.4 对模式作者的支持　　 207
14.4.1 协同写作　　 207
14.4.2 作者研讨会　　208
14.4.3 牧放　　208

14.5 技术为人　　209


第15 章 模式的过去、现在和未来　　210

15.1 过去的3 年　　210
15.1.1 模式与模式语言　　 210
15.1.2 理论和概念　　212
15.1.3 重构与集成　　212
15.1.4 GoF　　 213

15.2 模式的现状　　213

15.3 模式的明天在哪里　　 214
15.3.1 模式与模式语言　　 214
15.3.2 理论和概念　　216
15.3.3 重构与集成　　216
15.3.4 支持其他的软件开发方法　　 216
15.3.5 对其他学科的影响　　217
15.3.6 其他学科对我们的影响　　217

15.4 简述模式的未来　　218


第16 章 万事如意　　219


模式概念总结　　 221


参考模式　　 225
参考文献　　238