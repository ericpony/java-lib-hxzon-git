（hxzon学习笔记）java定时任务

by hxzon
======
1，接口：ScheduledExecutorService

辅助类：
Executors.newSingleThreadScheduledExecutor()
Executors.newSingleThreadScheduledExecutor(ThreadFactory threadFactory)
Executors.newScheduledThreadPool(int corePoolSize)
Executors.newScheduledThreadPool(int corePoolSize, ThreadFactory threadFactory)

实现类：
ScheduledThreadPoolExecutor

----
延迟一段时间（delay）后执行：

public ScheduledFuture<?> schedule(Runnable command, long delay, TimeUnit unit);

public <V> ScheduledFuture<V> schedule(Callable<V> callable, long delay, TimeUnit unit);

----
延迟一段时间（initialDelay）后执行，然后每次间隔一段时间（period）执行一次。

If any execution of the task encounters an exception, subsequent executions are suppressed. 
Otherwise, the task will only terminate via cancellation or termination of the executor. 
If any execution of this task takes longer than its period, 
then subsequent executions may start late, but will not concurrently execute.
如果某次执行抛出异常，下一次执行会受抑制。
只能通过取消任务或终止执行器来终止任务。
如果某次执行用时超过间隔时间（period），则下一次执行会被延后，不会并发执行。

@param period the period between successive executions

public ScheduledFuture<?> scheduleAtFixedRate(Runnable command,
                                                  long initialDelay,
                                                  long period,
                                                  TimeUnit unit);

----
延迟一段时间（initialDelay）后执行，然后每次间隔一段时间（period）执行一次。
与上一个方法的不同之处时，它保证两次执行之间的时间间隔一定是（period）。

subsequently with the given delay between the termination of one execution and the commencement of the next. 
If any execution of the task encounters an exception, subsequent executions are suppressed. 
Otherwise, the task will only terminate via cancellation or termination of the executor.

@param delay the delay between the termination of one execution and the commencement of the next
	 
public ScheduledFuture<?> scheduleWithFixedDelay(Runnable command,
                                                     long initialDelay,
                                                     long delay,
                                                     TimeUnit unit);
========
2，只能设置开始时间（initialDelay=startTime-currentTime），间隔时间（period）。

没法设置结束时间。
没法设置在某些时间点执行。
没法设置只执行多少次。

设计：
时间点rule
执行次数times
结束时间endTime

根据rule，得到下一次执行的时间，
生成一次调度任务，
在任务开头判断endTime和times。
在任务的末尾，计算下一次执行的时间。

