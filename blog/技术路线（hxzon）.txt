技术路线（hxzon）

专注jvm平台。
重点在前端，js。

---------------
编程语言：关注web后端开发方面。


1，Go

新兴的系统编程语言。编译型，性能有优势？
比C和C++友好。
也可用于web后端开发。

2，ruby，jruby，rails

ruby，rails有性能问题？
jruby：对比groovy没有优势？

3，python，jython

较流行，口碑不错。对比groovy没有优势？

4，groovy，grails

groovy：流行，比java友好。功能库丰富。

grails：流行。
是否在orm上有所改善？
grails-6.4.2 Where Queries
http://grails.org/doc/latest/guide/GORM.html#whereQueries

Gradle：构建工具。

spock：测试框架。

5，scala

静态类型。
语法糖多。但过多，学习成本高，维护成本高？

6，clojure

lisp的宏强大。更高的抽象能力，更好的复用。

common lisp：
scheme：抽象能力最强大？直接编译成可执行文件时比clojure更快？
clojure：对java友好。

7，haskell
编程思想的学习。《Real World Haskell》

---------------------
java web框架

1，tapestry5
组件化，框架简洁清晰，容易自定义组件，复用性高。全局单例。
没有富web组件。
在用，继续深入。

2，zk
富web组件。关注。
基于session，性能会有不足？
自定义组件困难。

3，spring mvc
基于url（rest），关注。
没有富web组件。

4，jsf
javeee标准。
基于jsp，jsp不够灵活。
自定义组件困难。

richfaces：
primefaces：
icefaces：

5，play

6，js
需认真学习。
编程思想的学习。实用。
js mvc，js ui（jquery，extjs，dojo）。

7，nodejs

8，vert.x——JVM上的Node.js替代者
http://www.infoq.com/cn/news/2012/05/vertx

--------------
java持久框架

1，hibernate
在用，继续深入。

2，ibatis
用过。子部件查询较灵活。
常用功能没有hibernate方便简单。

3，spring jdbc
观望。

----------------
数据库

1，mysql
简单好用。流行，开源。

2，oracle
收费。庞大。功能多，但用到的机会可能不多。

3，postgreSQL
开源，据说比mysql强大。

-----------------
NoSql

1，lucene
文本搜索。需认真学习。

2，hibernate search

3，Mongodb

4，hive

5，hbase

6，Cassandra

7，
---------------------
云技术

1，hadoop
了解，暂无机会使用。

2，google app engine

------------------
1，linux平台

服务器。


------------------
------------------
移动应用程序

1，android，ios/object-c

暂无兴趣。

-------------------
其它语言

1，perl
linux常用脚本语言。
正则表达式强大。
语法密度高，易写难维护。
不想使用。

2，php
流行，需求量大。
非有规划精心设计的语言。
不想使用。

3，C#，.NET
适当了解。进化神速，功能强大。
C#规则过多？
暂不想接触。

4，erlang
电信系统。并发。适当关注？

5，C，gcc

使用广泛的语言，需求量大，薪酬高。

linux开发基础。gcc。

适当学习。

-----------------
windows应用程序

windows平台客户端软件，目前仍有很大需求，浏览器仍有不少本地操作限制。

1，C++

VC6.0：windows应用程序开发。有点过时，但国内仍常用。

Visual Studio：windows应用程序开发。

Qt：设计模仿swing，较舒适。

使用广泛的语言，需求量大，薪酬高。
C++规则过于复杂且缺乏一致性，可适当学习，不抠细节，避免使用。

2，java swing，swt，javaFx

swing：功能仍不够强大，缺乏很多组件，自定义组件也不灵活。

netbeans rcp：

swt，jfaces：

eclipse rcp：

javaFx：功能和api比swing有所改善，但性能仍存在问题。

3，flash，flex
大势已去？不关注。

4，
