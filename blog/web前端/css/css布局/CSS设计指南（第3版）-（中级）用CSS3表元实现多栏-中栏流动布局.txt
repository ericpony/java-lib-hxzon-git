CSS设计指南（第3版）-（中级）用CSS3表元实现多栏-中栏流动布局
httpwww.ituring.com.cnarticle18506

本文节选自《CSS设计指南（第3版）》。
第1章完全免费试读，电子书在线热卖中：httpwww.ituring.com.cnbook1111

以下内容节选自第5章。

尽管利用HTML的table标签实现多栏布局是难以接受的，但使用CSS让布局形如表格则是绝对可以接受的。这种方法不会导致固定不变的表格布局，也不会出现难以重新应用样式的问题（比如在手持设备上表现为一栏）。说到创建布局，表格的行为确实是非常符合要求的，下面我来解释一下。

在最简单的情况下，表格由三个元素构成。一个表格外包装table，包含着表格行tr和表格数据td，比如下面这个例子。

table
    tr tdCell 1tdtdCell 2tdtdCell 3td tr
    tr tdCell 1tdtdCell 2tdtdCell 3td tr 
table
我们知道，CSS可以把一个HTML元素的display属性设定为table、table-row和table-cell。通过这种方法可以模拟相应HTML元素的行为。而通过CSS把布局中的栏设定为table-cell有三个好处。

表元（table-cell）不需要浮动就可以并排显示，而且直接为它们应用内边距也不会破坏布局。
默认情况下，一行中的所有表元高度相同，因而也不需要人造的等高栏效果了。
任何没有明确设定宽度的栏都是流动的。
这三个好处解决了本章前面学习布局时遇到的问题。然而，（这里一定有蹊跷，对吧？）CSS3表格行为在IE7及更低版本中并没有得到支持，而且也没有稳妥的补救措施。如果你（或者你的客户）愿意摒弃IE7，那么它就是一个既简单又可靠，而且还很彻底的解决方案。如果真是这样，我绝对推荐你采用这个方案，前面所讲的各种方案就当我没说。

关键是，你甚至都不需要用div外包装来扮演table和tr元素，仅仅是把三栏的display属性设定为table-cell就可以了。浏览器的排版引擎在碰到没有表行（tr）的一组表元时，会自动为它们添加表行，而在表行没有被table元素包围时，会自动为表行添加table。因此，你不需要多写任何标记，只要把每一栏的display属性设定为table-cell，剩下的事儿就可全部交给浏览器负责了。

因此，要实现一个三栏-流动中栏布局，只需要以下标记

nav!-- 内容 --nav
article!-- 内容 --article
aside!-- 内容 --aside
和以下CSS

nav {displaytable-cell; width150px; padding10px;
     background#dcd9c0;}
article {displaytable-cell; padding10px 20px;
     background#ffed53;}
aside {displaytable-cell; width210px; padding10px;
     background#3f7ccf;}
在图5-5所示固定宽度布局的HTML基础上，我们去掉了内部div。而在CSS中，把每一栏的floatleft替换成了displaytable-cell，同时去掉了中栏的宽度设定。好了，一个中栏流动、各栏同高，而且能够方便为内容添加内边距和边框的布局就这么出炉了（参见图5-12）！

[+]查看原图
图5-12 这个流动布局使用了CSS3的displaytable-cell，让每个栏形同表元一般

请注意，这个简单、功能完备的布局对IE7和IE6可没有任何腻子脚本，甚至连个退化的后备方案都没有。在这些浏览器中，三栏会上下堆叠在一起。因此，除非你下定决心不再支持老版本的IE，否则就得使用本章前面讲过的其他布局技术。等吧，等到这些浏览器没人用为止。

最后我们总结一下本节讨论的布局技术。这一节先讲了使用内部div的浮动固定宽度布局技术，它是适合新旧浏览器的一种最安全的技术。当然，这种技术要求的工作量也最多。而使用boxsizingborder-box声明（再加上适用于IE7和IE6的腻子脚本） 则能提供更直观的盒模型，而且不用使用内部div。最后，CSS3的displaytable-cell方案容易实现又功能完善（想流动就流动，想固定就固定，各栏同高，而且不需要内部div）。然而，它只适合IE7以上版本的浏览器。

到目前为止，我们例子中的布局都是在页眉和页脚之间简单地放着三个栏。本章最后，我们在前面三栏布局的基础上，再介绍一个稍微复杂一些的例子。