（hxzon读书笔记）《大型多人在线游戏开发》5，数据库技术

by hxzon
======
hxzon读书笔记：本章可以完全忽略。
======
《5，数据库技术》
（2013.11.18）
《5.1，关系数据库管理系统入门》
（忽略。）
======
《5.2，使用关系数据库管理系统来编写数据驱动的MMP游戏》
使用查找表。
字符串表：用数字来代替固定的字符串。
本地化：把本地化数据也存到数据库中。

使用数据库击中管理配置文件盒二进制数据文件，保持完整性，减少无效引用引起的问题。
（忽略。）

=====
《5.3，MMP游戏中的数据驱动系统》
《5.3.2，在MMP游戏中使用数据驱动系统》
数据驱动系统在MMP游戏中最主要的应用领取是，定义各种游戏规则。
可以由数据来驱动的游戏对象：
生物，武器，装备，飞船，行星，地形类型，角色技能，角色类别，角色魔法，游戏世界中没有生命的对象（树、石头、建筑物）。

《5.3.4，由数据驱动的游戏架构的类型》
-1，生成类（代码生成）。
根据数据来生成代码。
缺点：很难再运行时进行改变。
-2，动态属性。
只有一个类，所有的游戏对象都是一个类的实例，之间只有属性不同。
优点：
每个实例都可以有所不同。
允许动态创建对象类型。
允许在运行时动态修改对象属性。
-3，类别对象。
每个类表示不同类型游戏对象的广义类别。
与此平行的是另一个由类别实例类组成的类体系，每一个类别实例类都表示了特定类别游戏对象的实例。
每个类别类都有一个与之对应的类别实例类。
每个类别实例类都有一个类别类属性，在这个属性中保存了该类别特有的数据。
优点：
类的数量较少，每个类别一个，而不是每种类型的游戏对象一个。
可以在运行时创建类别类。
内存需求较小，数据仍然保存在类中，而不是实例中。
可以使用类别对象来标识游戏对象的类型。
可以通过修改类别对象的实例来修改一个类别的所有实例。
缺点：
需要两个平行的类体系，一个是类别类型，另一个是实例类型。
有些数据需要通过类别实例来访问，而不是对象实例。
需要在载入时创建类别对象。

（忽略。）
======
《5.4，使用数据库来管理游戏状态数据》
（忽略。）

（第5章结束。）


