Rust 0.9发布，改进了线程模型
作者 Jeff Martin ，译者 马德奎 发布于 一月 17, 2014
http://www.infoq.com/cn/news/2014/01/rust09

随着Rust语言向1.0里程牌的迈进，这一Mozilla支持的系统编程语言发布了0.9版，带来了许多改进。
在演变为一门准备长期支持的稳定语言的过程中，Rust已经发生了显著的变化。
Rust创建人Graydon Hoare说，该语言的目标用户是“沮丧的C++开发人员”，
因为它专注于成为C/C++的现代化替代品这一目标。

Rust是一门开源语言，它提供了一个用于Windows的二进制安装包，
以及一个源代码包，用于基于Unix的系统（FreeBSD、Mac OS X和Linux）。

0.9版本包含了几个特性：

Rust现在为开发人员提供了选择，他们可以选择是构建动态链接库，还是静态链接库。

本地库现在成了一等公民，Rust库的构建和分发可以不需要本地库的参与。

I/O基础设施经过了彻底修改。
从逻辑上讲，所有的I/O功能现在都位于std::io模块中。
通信模块（提供高级的通信抽象）也已经重写。

若干I/O变化是源于两个新库libgreen和libnative的创建。
Rust标准库不再设置成一个特定的调度方法，
所以程序可以以m:n（m个应用程序线程映射到n个内核线程）
或者1:1（一个应用程序线程映射到一个内核线程）模式运行。
这就允许开发人员为其应用程序选择能够提供最好性能的线程模型。

Rust开发人员应该注意，不要使用“托管指针（managed pointers）”（由@符号表示）
以及使用了Rc（引用计数指针）或者Gc（垃圾收集指针）的“转换代码（transition code）”。

读者可以查看Rust 0.9的官方发布说明来了解完整的细节信息。
除了官方提供的Rust教程外，想要进一步学习这门语言的开发人员还有几个不同的资源：
弗吉尼亚大学本科操作系统课程教授Rust；
Steve Klabnik最近准备了“30分钟的Rust介绍”。

查看英文原文：Rust 0.9 Released With Revised Threading Model

