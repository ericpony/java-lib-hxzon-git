（人物）段念：永远选择自己想要的（图灵访谈）
http://www.ituring.com.cn/article/72226


段念，现任豆瓣工程副总裁，曾在Google，乐元互动，OpenTV等公司任重要职位，并在华中科技大学获得了硕士学位。他在华为的时候抛弃了大家羡慕的市场部岗位，只为了去“搞技术”。他在通讯行业如日中天的时候离开了，只为了加入“快节奏”的互联网企业。他在Google的时候放弃了这份充满幸福感的工作，只为了见识一下“真正的风浪”。如今他来到了豆瓣，做起了技术圈大牛不屑的技术管理，只因为他在这里找到了实实在在“可以做的事情”。段念的“舍”和“得”相伴而行，这是一种久违的敢于设计自己人生的勇气。


感觉像个超人


“那段时间，我需要从机场一直写到下飞机，最紧张的一次是在出租车上还在接着调试，到下车时刚刚弄完。”


你从什么时候开始编程的？
我上小学的时候因为偶然的机会可以接触计算机，教电脑的老师看见我很感兴趣，所以就从英文字母开始，教我最基本的代码（BASIC）。上初中后，因为邓小平说：“计算机要从娃娃抓起。”所以当时学校开设了计算机班。后来因为升学压力，父母不让我花太多时间在计算机上，从高中开始就主要去搞各种数学、物理竞赛，基本不写代码了。但对计算机的兴趣是一直保留了下来，重拾代码是从进大学开始的。

你大学的专业是什么？谁帮你选的？
我的父亲三兄弟都是大学生，一位是学士、一位是硕士、还有一位是博士。上大学选专业的时候，对于他们提供的专业意见，我基本上没有什么反驳的机会。他们商量之后给我选了一个专业，电力系统。他们觉得现在很多专业的形势都看不清，但是国家要发展，一定会需要能源。当时他们能看到的计算机系毕业生的未来就是去某个大企业做机房主任。

我上大学听了专业课之后，就知道我不喜欢这个专业。当时的老师说：这个是我们最新的技术，15年前的。这个行业太稳定了，任何新技术都很难在这个领域里尝试。当时我听完就没有信心了。从大二开始，我专业课就上的很少了。基本每天跑去机房呆着。

那时候的上机费很贵吧？你在机房学编程？
机房上机有两个苦难。一是上机很贵，每小时要1、2块钱，而一年的学费才只有400块。还有一个是时间，机房老师中午12点要下班，然后要把门锁上出去吃饭，下午1点半左右回来。如果我中午也去吃饭就要重新排队了，所以我每天带着一个面包和一瓶矿泉水，中午就坐在门口等着开门。

当时很多人都去机房打游戏，但是我比较另类，一般都是拿着一本书敲代码。我当时学C语言的时候，我的第一个“hello world”怎么也显示不出来，我在那里搞了半个小时，特别着急，后来旁边一位高年级同学实在看不下去了，告诉我，你忘敲分号了。说起来，自学还是一件很辛苦的事。

大四快毕业时我在导师那做毕业设计，我的机器很烂，但是当时屋里有两台破机器堆在地上，我一看，竟然配置都很好，于是我就把两台机器拆了，拼成一台机器，又能用了。导师觉得我动手能力很厉害，所以让我和博士们一起去做项目。当时他们的问题被我搞定了，老师也很喜欢我，问我要不要读研究生。但是当时还是不想，找工作去了。

你是怎么找第一份工作的？
当时听说华为不错，于是我就跑到深圳，住在我叔叔的一个朋友家里。我连华为在哪里都不知道，给114打电话，查到了华为通讯有限公司。

我没有投过简历，当时还没有毕业证，我就带着导师的推荐信和我做的一个项目去了。华为说应届生招聘已经结束了。我说，要是有特别优秀的你们也应该考虑一下嘛。当时我的心态特别好，结果整个面试很顺利地就通过了。

你第一份工作是在华为，华为给了你这个行业的信心吗？
我一直都认为人生充满了惊喜，有很多事情是规划不出来的。我进入华为之后，要定岗，一般大家都愿意去市场部，因为华为最强的是市场部。但是我们这届非常奇怪，一共15个人，有14个想去做研发，还有一个要去生产部门。新人培训结束后，大家都上台分享自己这段时间的感想。当时我表现得很积极，结果市场部就看中我了，一定要我去市场部。虽然我自己不乐意，但是也没有办法。我去了市场部之后，一直不太喜欢。当时的国内市场很多关系的成分，基本用不上专业技能。于是我和市场部要求要去做研发，研发团队考了我一下，发现我还可以，就同意了。当时市场部应该是觉得我脑子进水了吧。

我刚到研发部，公司就要成立测试部门。外面招不到人，就得从公司内部转。我这种新来的就被转过去了。我当时还挺不乐意的，本来目标是奔着比尔•盖茨去的，这要我去干什么呢。

两年后我还是离开了华为。华为那时候有企业文化的小册子，里面用黑体字印着 “任总语录”，周末需要学习，还需要发言和写感谢。那些写出来的感想有时候看着真的挺肉麻的。说实话，看到那个语录我就想起了家里保留的文革时期的红宝书。站在公司的角度上说，这个东西未必是错的，它确实能解决一些问题，但是我个人不喜欢这种方式。这件事对我自己风格的形成有很大影响，我现在仍然很抗拒从上到下，整齐划一的统一思想行为。

辞职后想清楚自己要干什么了吗？
辞职后，我想出来看看，想想自己到底想要什么样的生活。刚好我在华为有几万块钱的存款，所以想回学校继续学习，可以用这笔钱来上学。我已经很清楚地知道以后我不会再做电力系统方面的工作，所以研究生学习三年来的重点都放在软件上。由于我是唯一一个真正有软件研发经验的人，所以在大学做了好些项目，老师给我的补贴比普通硕士要多。不能说这三年里我完全想清楚了自己要做的事，但整个经历的确很愉快，现在想起来觉得那段时间的休整很有价值。

硕士毕业之后去做什么工作了？
02年硕士毕业后，我去了广州一家叫新太科技的公司，是一家A股上市公司。我去了那里之后马上就被分到测试部门去了。我非常惊讶，因为为了避免这样的事情，在简历里我只字未提在华为的测试经历。我去问研发总监这是怎么回事，他说：我们这里的测试部门水平很差，这批毕业生里我们调了两位最好的去测试部门，希望你们能帮他们一下。当时我就觉得，这就叫命吧，于是就认命了。

现在想想，这件事并不是坏事。同样的事情不同的人来做效果是完全不一样的。这家公司测试部门做事很糟糕，部门的老员工没有太多意愿主动推进事情。我还在试用期间，就有了一个新项目，叫做固网短信，就是往固定电话发短信。当时手机还不普及，这个事情看起来还是有市场的。当时测试部门没人愿意做这件事，第一是风险很大，这件事情本身也不在公司的主要方向上；第二是由于这里涉及很多公司以前没有用过的技术，参与者需要投入的学习成本比较高。所以所有人都往后退。

我的态度很明确，所有事情都是要学的，学什么又有什么关系呢？我相信任何事只要坚持去做做看，对于自己来说肯定是有收获的。现在我也认为，处在学习期的时候，没必要那么精明地去挑做什么事，不管能不能做成，你经历过的这些事永远都是你的。

当时虽然没有加班费，但是我每天都会加班。这个项目我做了半年时间，我是这个项目的测试负责人，同时，我没有仅仅把自己定义成一个测试者，所以最后我变成了熟悉系统的，在平台上二次开发做得最好的人。

随后公司开始推进这个业务，市场部就带着我到处做推销。销售人员有什么想法，就会给我打电话，给我1、2天的时间把DEMO准备好做现场演示。由于固网短信平台本身还不够稳定，所以做DEMO的时候经常需要修改和调试平台中的代码。那段时间，我需要从到机场一直写到下飞机，最紧张的一次在出租车上还在接着调试，到下车时才刚刚写完。我当时很享受，我感觉这个工作就像是超人一样，做完事就凯旋而归。

你成功地完成这个项目的结果是什么？
虽然从这件事我并没有获得直接经济上的巨大回报，但是给了我巨大的信心，我发现我能做的事还挺多。当时老板也想把我提拔上来，但是毕竟我还只是毕业了一年，所以给了我一个副某某的title。在这件事半年之后，我很奇怪他们为什么不给我加薪。于是我和部门经理要求要涨薪，他说没有这样的先例，涨500块钱可以，多了不行。我觉得我比很多人強好多，我不会因为钱这件事不好意思，我值多少钱我心里有数。于是我就直接去找总监，我说没有先例是因为没有像我这样的人，有这样的人摆在面前你们还不抓紧，最后总监只肯给我涨500到800。于是我就离职了。

美丽新世界


“在这样变幻多端的环境中，我感受不到外界的巨变，所有风浪Google都替我扛住了，我只要做自己的事就好。这越来越无法满足我的好奇心，我就是想知道外面是什么样的。”


有没有想过去更大的城市看看？
在广州我过得很舒服，我很喜欢广州。但是广州真的太小了，在参加行业聚会里遇到的很多人，我并不觉得他们比我懂得多，甚至还不如我呢。我觉得很不妙，是不是我再干一年就到头了？我才20多岁，职业生涯就要到头了，这是件很让人恐惧的事情。

我想要不要跑去北京、上海，但是我觉得自己什么都没有，去了其他城市压力会很大的。人在压力大的时候容易做出错误的决定。于是我有意识的选择了某个上市公司在广州的研究院。我在研究院呆了一年多的时间之后，北京有一个机会，要招总经理助理，是偏技术的职位，要用内部公开竞聘的方式选拔。当时公司内部据说已经内定了一个人选，另一个竞聘者相当于陪太子读书的角色。其他人都知道是怎么回事，既然内定就都不报名了。

我属于不信邪的这种，就报了名。我是抱着比他们做得好的心态去的。所以在答辩的时候我发挥地很好，摆出那种领导们想保都没法保的架势。一般答辩完当场就应该有结果，但是这个不行，他们还要讨论一下。后来过了几天给了我一个消息，要派我去了，最后给了部门总工程师的头衔（又是个奇怪的头衔）。

后来我又在北京呆了一年多。当时通讯行业应该还处于不错的状况，但我觉得做事的节奏真的是太慢了，或许那个时候我隐约感觉到这个行业的颓势。我想找一些更刺激的事情做。于是我和几个人创业去了。这件事给我的教训就是不要和自己了解不够深的人去创业。不仅要认识，还要有深入的了解。尤其是对钱的态度、做事的态度、对未来的期望等等。

后来你考虑去互联网公司工作了吧？
2006年初Google在国内做招聘，我投了一份简历，几个月都没有回音。06年底我想退出创业的时候，有猎头找我去OpenTV，他们的质量部门在中国，缺一位总监。我正在考虑的时候，Google过了一年忽然想起我了，要我去面试。Google的面试很有名，我想即使通不过，去见识一下也好啊。我在Google一共面了7轮，都是美国的工程师飞过来面的，这真是我这辈子经历过最长的面试。面试完后，Google方面拖拖拉拉地搞得我很不爽。但是猎头那边的面试非常快，面试完成后两天之内就给了我offer，于是我决定先去OpenTV看看。过了几天Google给我打电话，告诉我一个“好消息”，我也只好婉拒，说我刚接了别人一个offer。但是Google表示这个offer一年都有效，而且鉴于我有另外一个offer，所以给我的package要重新调整，比以前更好。但是我也不好意思反悔，只能是先在这边做做看。

我到了OpenTV发现，这个环境不是我喜欢的环境，官僚气很重。我下面有两个经理，层层汇报。我的主要工作就是和美国那边扯皮，接了任务之后，分下去就可以了。他们觉得我干的还好，但是我自己不爽。正好那段时间家里也有一些事情，所以想想，还是去Google算了。

去了Google之后，发现美国的总监做远程的管理工作负担很大，他其实也想找一个中国这边的经理。他问我对未来的规划是什么，我就说我想负责这个团队。于是一段时间后我就被任命为Google中国区软件测试经理。其实我觉得应该不止我一个人想做这个职位，但我可能是唯一一个这么直接了当要求这个职位的人吧。

为什么要离开Google这么好的公司呢？
我离开的原因并不是因为2010年Google在中国的事件，当时的环境下事情还是可以继续做下去的，也不会有职位方面的担心。真正的原因是，我觉得Google太大了，大得我只能看得它的现在，看不见过去，也看不到未来。

Google的很多制度我都看不到它的所以然，不知道是如何形成的，这些制度虽然有效，但是却无法移植到其他企业。Google这样的大公司就像是一棵树，我就在树的下面，很舒服，不会经历风吹日晒，但是当我想看看天空的时候，我是看不到的。在这样变幻多端的环境中，我感受不到外界的巨变，所有风浪Google都替我扛住了，我只要做自己的事就好。这越来越无法满足我的好奇心，我就是想知道外面是什么样的。

当时我在离职的时候有很多人大呼不解，你这么幸福，还要离开？你要是不爽，去美国不就好了。我当时也确实考虑了去美国这个选项，当时我的上司说，要是你想来美国就告诉我一声。我在美国出差的时候就一直在想，如果当游客当然很好，但是作为本地人的话还会很好吗？这件事我很不确定。到了那里，因为文化背景、教育背景的不同，很可能就没有什么往上走的空间了。和美国同事聊天、聊工作可以，其他就没什么可聊的了。打个比方，比如我是一个VC，如果一个中国人过来说有个什么项目，我可能也愿意听听，但是如果过来一个南亚人，或者是和你文化背景完全不同的人呢？我觉得我才30多岁，还不需要考虑稳定安逸这件事。

你在过程中逐渐转型成一个技术管理者，为什么不把技术坚持到底呢？
我自己做超人的时候很累很充实，感觉很好。但是我感觉到一个人的能力再大也是有限的。一个超人也就能救下一辆火车。如果你想做大事的话，一个人再强也是无法成功的。所以我想让更多的人在我的团队里发挥出最好的水平，让每个人工作更有激情，让整个团队的水平超出每个个体之和。我觉得这样比一个人做英雄更厉害。

但是作为技术管理者的遗憾就是：不得不做一位幕后英雄，不能再享受解救世界的快感。但经过一段时间的调整后，我越来越喜欢技术管理工作。它能够激发别人的动力，让团队成员变得比我更有战斗力，这是件很有意思的事。

您是一位敏捷实践者，但是却经常“黑”一些敏捷观点，这是怎么回事？
国内的敏捷传播者经常会给人建立一些片面的观念。我举一个例子，我曾经应邀去做了一个培训课程。课上我讲了一些敏捷的基础概念，但是底下观众完全没有反应。我觉得很奇怪，因为组织方告诉我这些人都是接受过Scrum培训的人，有很多Scrum Master。于是我让他们举手告诉我有谁拿过Scrum的认证。一共就七八十人，有三十多人举手。我问，你们对于敏捷最大的问题是什么？其中有一位举手说：我们的确是拿到Scrum Master认证了，但是我一直有一个问题想不通，我们到底为什么要做敏捷？这样的问题让我很无语。

以Scrum为例。Scrum的优点很明显。而Scrum既有原则性的框架，也有可实际操作的操作框架。对于已有自己工作方式的团队来说，导入Scrum显然比导入XP等方法易于操作。从这个意义上说，Scrum提出了一个很好的框架。但是我不知道是无意还是有意，推广Scrum的公司很容易把它单单当成一个工具。似乎你用这套框架来做事情，就不用关心其他东西了，所有关注都落在那些细节上。有些人把做Scrum变成目标，我对这样的事很反感。

我见过很多团队做Scrum，他们根本就不理解为什么要做Sprint，老是纠结于到底一个Sprint应该是两周还是三周上。他们搞不清Sprint对产品的作用在哪里。我反对Scrum就是因为我见过太多的咨询公司把Scrum当成一个赚钱的招牌。咨询公司说，如果你能够按照这个流程来做事情，那你就应该敏捷了。所以上次在上海的Scrum Gathering，我在台上说：敏捷的最大好处是什么？那就是养活了一大堆咨询顾问。

我在Google时候有人问我，Google是一家敏捷的公司吗？我说是啊。他们说那Google是用什么呢，Scrum还是XP？我说都不是。他们就觉得那怎么能叫做敏捷呢。你看，就是有这样的问题。Google是说不需要划一个界限，什么是敏捷，什么不是敏捷，最重要的是做事的目的和目标，以及基本原则。我觉得敏捷的核心价值观是通用的，但是随着公司的不同会有区别。敏捷的实践随着公司的不同更是天差地别。把敏捷的实践强行变成一个统一的框架，这怎么可能！

最近这两年敏捷的观念里面有不少误解，就是有些咨询公司有很大的责任。我在国内见过真正意义上做敏捷比较好的公司，他们的敏捷都各有特点，我从没见过两家公司做的敏捷在实践层面上完全一样。我们在豆瓣也做过结对编程的尝试，但是我们不喜欢，而ThoughtWorks就觉得结对编程很重要。他们没有错，他们的做法有他们的道理，但是我的做法也有我的道理。只要达成你的目标就好，怎么做又有什么关系呢？

豆瓣的气质


“豆瓣为什么需要这样的工程师文化，豆瓣没有这样的文化会不会垮掉？也许不会，但是那就不是豆瓣了。”


有人说国内工程师文化最接近Google的公司就是豆瓣了，你在两个公司都工作过，你怎么看？
确实有相似的地方。我甚至觉得豆瓣在“Don't be evil”上做的比Google还彻底。豆瓣很强调工程师的作用，给工程师比较大的空间，这一点也很Google类似。、

豆瓣在用户价值的追求上可能比Google做得更过，Google说如果你做对的事情，钱就会来。但其实Google的新工程师应该都上过 “一块钱是怎么来的”这类课程，在讲技术架构的同时，也会建立一个概念：Google是怎么赚钱的。而在豆瓣，我觉得大家都不怎么提钱。我刚来的时候还挺奇怪的，为什么这件事没人说。我当然相信，当你做对的事情，钱就会来，但是这仍然需要建立在对商业的考虑之上。这些事没有什么好避讳的。当然，豆瓣把用户价值放在比赚钱更重要的位置上，这也是我喜欢豆瓣的一个地方。

我看人有几点，第一是不要把钱看得太重，看得太重的人我都不会靠得太近。另外，我还喜欢和有理想主义情节的人共事。不是说赚钱不对，而是应该有比赚钱更重要的事才好。这也是我加入豆瓣的原因。最重要的是周围的人和你是不是一伙人，在豆瓣我找到了我的同类。

豆瓣程序员看起来有一种独特的“文艺”气质，这样的气质从何而来？
公司本身的基因是由最初成立时的几个人决定的，以后做的事情又会进一步加强这样的基因特性。其实我并不觉得豆瓣的程序员有多文艺，但是和其他商业公司相比，对钱的问题上的确是显得更文艺一些。我们决不会让广告把我们的页面搞得乱七八糟。另外我们做的事情本身也是能让我们自豪的事情，责任感很多时候都是来自这里。

有些事情听起来风马牛不相及，你对你做的事情的认同感和代码质量怎么会有关系呢？你认为你做的事让你自豪，你自然会把代码写得漂亮。如果你是在捏着鼻子做这件事，我不相信你会有意愿努力写出好代码。

豆瓣一直都把CODE作为程序员们的工作环境，CODE在豆瓣是如何起源的？
CODE一开始有一个很简单的目的，就是做一个GitHub的PR流程，虽然GitHub很好用，但是如果每个人都用的话还是很贵的。我们用不着那么多功能，只要一个PR流程。做完之后我们觉得还挺好用的，要不我们就来把它变得更好用一点吧！

这个项目是没有规划和组织的情况下，工程师自发参与进来的。他们自己来确定怎么做这件事，要加什么功能，确定什么样的规则，如何来投票。这件事从开始就没有一个从上到下的气氛，都是工程师自发的投入。一直到2013年的8月份之前，都没有全职的工程师来维护这个系统。后来由于CODE已经变成了我们的生态系统，需要工程师来确保它的稳定性，我们到现在也只有一位全职工程师来做这件事。

CODE开源之后有什么效果？有团队在使用吗？
我们已经收到了一些PR和一些反馈，但是这件事最终能做成什么样我也并不确定。老实说我们这样的系统提供的功能GitHub大部分都有，CODE最大的特性是体现了企业本身氛围和文化中的一些东西。

前段时间我跟国内传统企业软件开发的一些人有过交流，他们都非常羡慕这样的工作方式。但是我和他们接触了之后才知道为什么他们做不了这样的事，他们的工程师从来都不会认为自己的工作是值得骄傲的工作，所以他们就不会想办法让自己做得更好。我们的工程师的想法是，有了这样的工具，我们的效率会更高，我们工作的过程也会更然人愉快。

如果你写代码的同时并不追求这种快乐，你就不会觉得这样的工具有必要。国内有很多人想做GitHub，但是我觉得他们没搞清这个东西的本质是什么。我觉得这个系统真正有价值的东西不是它提供了一个可以存放代码的地方，而是如何把它变成一个和组织的文化相契合的工作环境。

在豆瓣开发人员如何与产品经理合作？
豆瓣的开发人员和产品经理的合作也存在一些问题，但我并不认为这些问题需要彻底解决。经常会出现合作边界在哪里这样的问题。这个时候，我更愿意让他们自己来解决问题，因为这个事情没有固定结论。我们这里既有正面的例子也有反面的例子。PM设计一个产品方案，工程师觉得不爽，用起来不舒服，于是开发人员自己做了一个产品上线了，反响很好。但并非全是这样。所以我更愿意让不同团队自己来冲突，自己确定解决方案。

但是还是有一些原则，如果产品经理是对这个产品负责的人，那么决定权就在他手上。工程师要是有其他想法，可以去说服PM，也可以花一小部分时间来做你认为对的事情，如果你能用数据证明你的做法是可以的，那就可以按照你的方式来做。你会有这样的机会来证明你的想法，但是这样的机会也有比较大的代价，因为你得做两套产品了。如果你对你自己的正确性没有很大的把握，那也就没有什么好抱怨的了。所以在豆瓣里面我们并不抗拒冲突，在团队里我会接受大家用不同的方式来做事。

豆瓣创始人阿北说过：“不想当CEO的程序员不是产品经理。”你也写过关于全栈工程师的文章，在这件事上你对团队上有什么要求？
豆瓣上有人发了一条广播黑全栈工程师，文章说“我强烈鄙视所有号称或想要成为全栈工程师的人”。我充分理解他说这句话的初衷是什么，因为一个人不可能有那么多的精力和时间在每一个技术上都达到精通的状态。但是我们在说全栈工程师这个概念的时候，是希望工程师可以站在更全面的角度上看问题。

一个好的工作方式应该是这样的：你是为解决问题负责，而不是对某个技术问题负责。你要找到最好的方式来解决问题，可能就不能只考虑你所在的这个层面，你需要从多个角度和维度来考虑。比如你是一个后端开发为主的工程师，不了解移动端的开发方式和背景，你可能设计了一个自己觉得比较好的接口，但是移动端开发可能并不这么觉得。

当一个工程师拥有更多的技术栈时，当你能用PM的角度来看问题时，你得到的总体解决方案就更有可能接近最优解。全栈工程师更多是从这个角度来阐述，而并非是站在老板的角度，希望每个人什么都能干。

从我本人来说，我对这件事也深有体会。最近我读的书有相当一部分都是和人文相关的。有人说要学习管理就要读管理方面的书，我并不这么认为。管理本身是对人本身的理解，很多时候你需要换位思考。但是换位思考的前提条件是你能够站在别人的角度想问题。

有人说豆瓣的成功很大程度上归功于创始人阿北，他对你有什么样的影响？
我在还没有决定是否加入豆瓣的时候和阿北吃饭，问过一个关键的问题，我问他，你为什么希望我去豆瓣，你希望我能做什么？他说，豆瓣这么多年，尤其在工程师团队中形成了一些独特的文化，我希望你能用一些方式把这个文化传承下去，尤其在团队规模扩张的时候，我非常需要你把这件事做下去。我又问，你为什么觉得工程师文化这么重要呢？如果其他人听到这个问题可能会说：这样的团队效率才会更高嘛。但是阿北给了我一个意想不到的回答，他回答的大意是说，他并不觉得做这件事情的目的是为了工作效率，他觉得一个公司就应该是这样的。他没有站在“效应”的角度上来讨论最大化，这个答案中的理想主义色彩让我很喜欢。

我喜欢这样的思维方式，我要的不是这件事带给我的结果，而是这件事本身。这和我的观点很契合。豆瓣为什么需要这样的工程师文化？豆瓣没有这样的文化会不会垮掉？也许不会，但是那就不是豆瓣了。

有人说豆瓣现在最欠缺的就是一个成功的客户端，你认同吗？
有道理。豆瓣在移动端上做过一些努力，但是确实一直都没有成功地占据一个好的位置。一个成功的客户端没有想象中那么简单。什么样的东西才是一个成功的移动端产品？恐怕这要结合豆瓣自身的状况。比如微信很成功，但那不是豆瓣出得了的东西，比如91很流氓，这也不是豆瓣做得了的东西。豆瓣能在移动端上做一个什么样的东西呢？豆瓣接下来可能会给大家一个回答。去年到今年，豆瓣积累了很多经验和教训，今年我对豆瓣在这个问题上的回答还是有信心的。

您在豆瓣工作以来的最大收获是什么？
阿北对产品的思维和远景有一个系统化和逻辑化的思考方式。我现在也开始参与公司新产品的孵化，所以我和阿北有相对密集的讨论。从产品的角度上来说，从他那里我学到了很多做事的方式。这是我来豆瓣这段时间对于我个人的一个直接收获。

从我来豆瓣之后，豆瓣的人员规模，组织结构，做事的方式都有一些调整。过程中，我是一个积极的参与者，包括工程师文化的倾向，工程师团队的认知，还有在具体的工程师的激励体系和机制方面，我都做了一些调整改变。这让我看到一个团队在业务和规模发生改变的时候，做一些什么样的事情才能适应和配合。

豆瓣在过去的八年时间里，形成了一个独特的文化，这个文化非常符合它在这八年中的状况。但是这样的文化在面临挑战时也必须做出一定的适应和调整，不能说独特的就是好的。但是反过来说，豆瓣的确有很多优秀的值得骄傲的地方是应该保留下来的。我希望看到像豆瓣这样一个有特点的中国互联网公司，到底如何在这种多变地互联网环境中保持住自己，并向更高的地方前进。

您曾说过不鼓励“惩罚失败”，但是惩罚失败是某些老板的通用方法，你会如何面对这样的老板？
惩罚失败要讨论它的目的是什么。比如对银行而言，惩罚失败是有道理的，因为它的风险成本太高。对于互联网企业这样创新型公司而言，惩罚失败只会带来一个结果：遏制创新。因为只要是创新就一定会有失败，而且它的失败率高于成功率。这就是我这么做的出发点。

另外，我并不主张对任何失败都不做惩罚。我有一个原则：失败必须是合理的失败。这件事如果是在公司业务范围里做出的合理尝试，失败了是没关系的。但如果是不合理的尝试，我们明明知道不会有结果，而你又投入了大量精力去做，我就会觉得这件事是有问题的。

如果我遇到这样的老板，那么解决方案很简单，我不会加入这样的公司。这么多年我对自己最满意的一点就是我有选择权，我可以自己决定去哪里，不去哪里。

