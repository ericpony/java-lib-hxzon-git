CSS设计指南（第3版）-（高级）居中没有宽度的元素
httpwww.ituring.com.cnarticle20786

本文节选自《CSS设计指南（第3版）》。
第1章完全免费试读，电子书在线热卖中：httpwww.ituring.com.cnbook1111

以下内容节选自第7章“CSS3实战”。

在一个元素内居中另一个元素有时候会很困难。对于常规、静态定位的元素，可以让它向左或向右浮动，或者使用text-align属性让它在父元素内居左、居右或居中。还可以利用自动外边距（margin0 auto）来居中元素。这些方法的问题在于，要居中的元素必须是有宽度的。像这里用于构成菜单的HTML列表，它可能是根据数据库信息动态生成的，或者说将来有可能手工编辑，总之你不可能提前设定它的宽度。我收到很多邮件，都是询问怎么在容器内部居中菜单的。下面也算是统一回答吧，我们来看看怎么居中一个没有设定宽度的元素。

在display属性的值中，inline-block具有一些特殊的混合行为。正如它的名字所暗示的，它既有块级元素的特点，也有行内元素的行为。从块级元素角度说，可以为它设定外边距和内边距，也可以通过它简便而有效地包围其他块级元素。从行内元素角度看，它会收缩包裹自己的内容，而不是扩展填充父元素。换句话说，inline-block元素的宽度始终等于其内容宽度。这种元素还有一个特点，就是可以包围浮动元素。不过，这种元素也有一个问题，即不能给它的外边距设定auto值——而这恰恰又是在更大的容器内居中元素的最简单方法。

解决方案就是为要居中元素的父元素（这里的nav）应用text-aligncenter，为要居中的元素（这里的ul）设定displayinline-block，让它包含列表项。这样设定就可以得到我们想要的结果：没有固定宽度的元素也能在其父元素内居中。如前面代码开头加粗的CSS声明所示，我们就是这么做的。现在菜单完美居中了，因为其父元素nav忽略了两端绝对定位的元素，扩展到了与header同宽。

为了演示这个技巧有多好，我们来去掉一个菜单项。

[+]查看原图
图7-8 即使去掉菜单项，菜单整体上仍然居中

如图7-8所示，去掉最后一个菜单项之后，整个菜单照样居中。对于不同用户会看到不同菜单（比如，区别是否为注册会员）的动态站点来说，这个技巧的确太有用了。还一个地方要特别留意，就是我没有直接为第一和第五个菜单项添加圆角效果，否则将来如果增减菜单项就会出问题。如前面代码末尾加粗的声明所示，为了让CSS适应菜单项的动态变化，我们把圆角效果应用给了first-child和last-child元素。这样一来，第五个菜单项被删掉后，第四个菜单项就会成为最后一个子元素，从而取得应用给last-child的圆角效果。